#!/bin/bash
#A script to suspend a linux machine when all connected users haven been idle 

#check for active X sessions and xrdp sessions and terminal sessions

#if all users are idle longer than a given timeout, suspend the system to ram

# example crontab entry:
# @reboot /usr/bin/screen -d -m -S suspend-when-idle  /usr/local/sbin/suspend-when-idle

#30min timeout to shutdown when idle
timeout=1800000 
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin


is_samba_active(){

  shares=()

  echo "samba shares"
  while read line; do
      [[ "$line" =~ ^\[ ]] && name="$line"
      [[ "$line" =~ ^[[:space:]]*path ]] && echo -e "$name\t$line" && shares+=(`echo $line |awk -F= '{print $2}'|awk '{$1=$1;print}'`)
  done <<<`testparm -s 2>/dev/null`


  for samba_pid in `ps -e -o cmd,pid|grep "^smbd:"|awk '{print $NF}'`; do
    echo "smbd pid $samba_pid, checking open files in shared folders..."
    for fd in /proc/$samba_pid/fd/*; do
      file=`readlink "$fd"`
      for (( i=0; i<${#shares[@]}; i++ )); do
#        echo "open files in ${shares[$i]} ?"
        case $file in ${shares[$i]}*)
          echo "$file in ${shares[$i]}"
          if [ -f "$file" ]; then
            echo "$file is file!"
            return 0
          fi
        esac
      done
    done
  done
  return 1
}



#wait 15min after startup to give someone a chance to connect
sleep 900
pattern="/var/run/xrdp/sockdir/*/xrdp_display*"
while true; do
  date
  suspend=true

  #check if btrfs is scrubbing
  if [ `ps -ef|grep "btrfs scrub"|wc -l` -gt 1 ]; then
	  echo scrub
	  suspend=false
	  sleep 120
	  continue
  fi

if is_samba_active ; then
  echo "samba active"
  suspend=false
  sleep 120
  continue
fi



  #check all xrdp sessions
  if ls $pattern >/dev/null 2>&1; then
    for file in $pattern; do
        number=$(basename "$file" | grep -o '[0-9]\+$')
        owner=$(stat -c '%U' "$file")
        
        echo "File: $(basename "$file")"
        echo "Owner: $owner"
        echo "Display-ID: $number"
        export DISPLAY=:$number 
        idle=`sudo -u $owner xprintidle`
        echo  "Idle: $idle"

        echo "----------------"
        if  [ -n "$idle" ] && [ $idle -lt $timeout ]; then
          suspend=false
          break
        fi
    done
  else
    echo "No xrdp sessions found."
  fi

  #check idle time of X sessions
  while read -r line; do
    # Extract username and display
    user=$(echo "$line" | awk '{print $1}')
    display=$(echo "$line" | awk '{print $2}' | grep -o ':[0-9]\+\(\.[0-9]\+\)\?')
    echo "checking $user on $display"
    if [ -n "$display" ]; then
      # Export display for xprintidle
      export DISPLAY="$display"
      
      idle=`sudo -u $user xprintidle`
      
    if  [ -n "$idle" ] && [ $idle -lt $timeout ]; then
      echo "$user $idle"
      suspend=false
      break
    fi
    fi
  done < <(who)

  #check all other terminal sessions
  current_time=$(date +%s)
  while read -r line; do
    # Extract tty device name from who output
    tty=$(echo "$line" | awk '{print $2}')
    if [ -n "$tty" ]; then
      device="/dev/$tty"
      if [ -e "$device" ]; then
        # Get last access time in seconds
        atime=$(stat -c %X "$device")
        
        if [ -n "$atime" ]; then
          # Calculate difference
          diff=$((current_time - atime))
          idle=$(($diff * 1000))
          
          # Print results
          echo "Terminal: $tty"
          echo "Last accessed: $(date -d "@$atime")"
          echo "Seconds since last access: $diff"
          echo "---------------------------------------------"
          if  [ -n "$idle" ] && [ $idle -lt $timeout ]; then
            echo "$user $idle"
            suspend=false
            break
          fi
        fi
      fi
    fi
  done < <(who)

  dlna=$(ss -tp | grep minidlna|wc -l)
  if [ $dlna -gt 0 ]; then
    sleep 600
      dlna=$(ss -tp | grep minidlna|wc -l)
      if [ $dlna -gt 0 ]; then
      suspend=false
        fi
  fi

  if [ $suspend == true  ]; then
    echo suspend
    pm-suspend 
    sleep 600
  fi

  sleep 60

done

